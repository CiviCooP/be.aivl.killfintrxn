<?php

/**
 * Class to process financial items
 *
 * @author Erik Hommel (CiviCooP) <erik.hommel@civicoop.org>
 * @date 24 Jan 2017
 * @license AGPL-3.0
 * @link https://civicoop.plan.io/projects/aivl-civicrm-ontwikkeling-2016/wiki/Contact_Processing_from_Petition
 */
class CRM_Killfintrxn_FinancialItem {
  /**
   * Method to process post hook
   *
   * We want to delete all the financial transactions, entity financial transactions and financial items from
   * the database that were NOT generated by the specific Amnesty extension
   *
   * @param $op
   * @param $objectName
   * @param $objectId
   * @param $objectRef
   */
  public static function post($op, $objectName, $objectId, &$objectRef) {
    // delete financial items and transactions just after they were created. At the moment it looks like
    // it is not required in any other operations as it is already missing the old ones
    if ($op == "create") {
      // first find financial_trxn_id from civicrm_entity_financial_trxn
      try {
        // todo possibly use     CRM_Core_BAO_FinancialTrxn::deleteFinancialTrxn($id);

        $financialTrxnId = civicrm_api3('EntityFinancialTrxn', 'getvalue', array(
          'entity_table' => 'civicrm_financial_item',
          'entity_id' => $objectId,
          'return' => 'financial_trxn_id'
        ));
        // now first delete the entity_financial_trxn, then the financial_trxn and finally the financial_item
        $sqlEntity = 'DELETE FROM civicrm_entity_financial_trxn WHERE financial_trxn_id = %1';
        CRM_Core_DAO::executeQuery($sqlEntity, array(1 => array($financialTrxnId, 'Integer')));
        civicrm_api3('FinancialTrxn', 'delete', array('id' => $financialTrxnId));
        $sqlFinItem = 'DELETE FROM civicrm_financial_item WHERE id = %1';
        CRM_Core_DAO::executeQuery($sqlFinItem, array(1 => array($objectId, 'Integer')));
      } catch (CiviCRM_API3_Exception $ex) {}
    }
  }
}